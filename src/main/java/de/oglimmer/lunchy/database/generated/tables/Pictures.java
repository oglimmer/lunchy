/**
 * This class is generated by jOOQ
 */
package de.oglimmer.lunchy.database.generated.tables;


import de.oglimmer.lunchy.database.generated.Keys;
import de.oglimmer.lunchy.database.generated.OliLunchy;
import de.oglimmer.lunchy.database.generated.tables.records.PicturesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pictures extends TableImpl<PicturesRecord> {

	private static final long serialVersionUID = 120129547;

	/**
	 * The reference instance of <code>oli_lunchy.pictures</code>
	 */
	public static final Pictures PICTURES = new Pictures();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PicturesRecord> getRecordType() {
		return PicturesRecord.class;
	}

	/**
	 * The column <code>oli_lunchy.pictures.id</code>.
	 */
	public final TableField<PicturesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.fk_Location</code>.
	 */
	public final TableField<PicturesRecord, Integer> FK_LOCATION = createField("fk_Location", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.fk_User</code>.
	 */
	public final TableField<PicturesRecord, Integer> FK_USER = createField("fk_User", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.filename</code>.
	 */
	public final TableField<PicturesRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.caption</code>.
	 */
	public final TableField<PicturesRecord, String> CAPTION = createField("caption", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.created_On</code>.
	 */
	public final TableField<PicturesRecord, Timestamp> CREATED_ON = createField("created_On", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.fk_Community</code>.
	 */
	public final TableField<PicturesRecord, Integer> FK_COMMUNITY = createField("fk_Community", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.pictures.up_Votes</code>.
	 */
	public final TableField<PicturesRecord, Integer> UP_VOTES = createField("up_Votes", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>oli_lunchy.pictures</code> table reference
	 */
	public Pictures() {
		this("pictures", null);
	}

	/**
	 * Create an aliased <code>oli_lunchy.pictures</code> table reference
	 */
	public Pictures(String alias) {
		this(alias, PICTURES);
	}

	private Pictures(String alias, Table<PicturesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Pictures(String alias, Table<PicturesRecord> aliased, Field<?>[] parameters) {
		super(alias, OliLunchy.OLI_LUNCHY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PicturesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PICTURES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PicturesRecord> getPrimaryKey() {
		return Keys.KEY_PICTURES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PicturesRecord>> getKeys() {
		return Arrays.<UniqueKey<PicturesRecord>>asList(Keys.KEY_PICTURES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PicturesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PicturesRecord, ?>>asList(Keys.FK_PIC_LOC, Keys.FK_PIC_USR, Keys.FK_PIC_COM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Pictures as(String alias) {
		return new Pictures(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Pictures rename(String name) {
		return new Pictures(name, null);
	}
}
