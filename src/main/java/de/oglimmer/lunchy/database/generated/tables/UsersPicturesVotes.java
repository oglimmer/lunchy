/**
 * This class is generated by jOOQ
 */
package de.oglimmer.lunchy.database.generated.tables;


import de.oglimmer.lunchy.database.generated.Keys;
import de.oglimmer.lunchy.database.generated.OliLunchy;
import de.oglimmer.lunchy.database.generated.tables.records.UsersPicturesVotesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersPicturesVotes extends TableImpl<UsersPicturesVotesRecord> {

	private static final long serialVersionUID = 142813113;

	/**
	 * The reference instance of <code>oli_lunchy.users_pictures_votes</code>
	 */
	public static final UsersPicturesVotes USERS_PICTURES_VOTES = new UsersPicturesVotes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UsersPicturesVotesRecord> getRecordType() {
		return UsersPicturesVotesRecord.class;
	}

	/**
	 * The column <code>oli_lunchy.users_pictures_votes.id</code>.
	 */
	public final TableField<UsersPicturesVotesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users_pictures_votes.fk_community</code>.
	 */
	public final TableField<UsersPicturesVotesRecord, Integer> FK_COMMUNITY = createField("fk_community", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users_pictures_votes.fk_user</code>.
	 */
	public final TableField<UsersPicturesVotesRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users_pictures_votes.fk_picture</code>.
	 */
	public final TableField<UsersPicturesVotesRecord, Integer> FK_PICTURE = createField("fk_picture", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users_pictures_votes.created_on</code>.
	 */
	public final TableField<UsersPicturesVotesRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>oli_lunchy.users_pictures_votes</code> table reference
	 */
	public UsersPicturesVotes() {
		this("users_pictures_votes", null);
	}

	/**
	 * Create an aliased <code>oli_lunchy.users_pictures_votes</code> table reference
	 */
	public UsersPicturesVotes(String alias) {
		this(alias, USERS_PICTURES_VOTES);
	}

	private UsersPicturesVotes(String alias, Table<UsersPicturesVotesRecord> aliased) {
		this(alias, aliased, null);
	}

	private UsersPicturesVotes(String alias, Table<UsersPicturesVotesRecord> aliased, Field<?>[] parameters) {
		super(alias, OliLunchy.OLI_LUNCHY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UsersPicturesVotesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USERS_PICTURES_VOTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UsersPicturesVotesRecord> getPrimaryKey() {
		return Keys.KEY_USERS_PICTURES_VOTES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UsersPicturesVotesRecord>> getKeys() {
		return Arrays.<UniqueKey<UsersPicturesVotesRecord>>asList(Keys.KEY_USERS_PICTURES_VOTES_PRIMARY, Keys.KEY_USERS_PICTURES_VOTES_UNIQUE_USER_PICTURE_VOTE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UsersPicturesVotesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UsersPicturesVotesRecord, ?>>asList(Keys.FK_USERS_PICTURES_VOTES_COMMUNITY, Keys.FK_USERS_PICTURES_VOTES_USERS, Keys.FK_USERS_PICTURES_VOTES_PICTURES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersPicturesVotes as(String alias) {
		return new UsersPicturesVotes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UsersPicturesVotes rename(String name) {
		return new UsersPicturesVotes(name, null);
	}
}
