/**
 * This class is generated by jOOQ
 */
package de.oglimmer.lunchy.database.generated.tables.records;


import de.oglimmer.lunchy.database.generated.tables.Offices;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfficesRecord extends UpdatableRecordImpl<OfficesRecord> implements Record7<Integer, String, Double, Double, Integer, Integer, String> {

	private static final long serialVersionUID = -1713279700;

	/**
	 * Setter for <code>oli_lunchy.offices.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>oli_lunchy.offices.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>oli_lunchy.offices.geo_Lat</code>.
	 */
	public void setGeoLat(Double value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.geo_Lat</code>.
	 */
	public Double getGeoLat() {
		return (Double) getValue(2);
	}

	/**
	 * Setter for <code>oli_lunchy.offices.geo_Lng</code>.
	 */
	public void setGeoLng(Double value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.geo_Lng</code>.
	 */
	public Double getGeoLng() {
		return (Double) getValue(3);
	}

	/**
	 * Setter for <code>oli_lunchy.offices.zoomfactor</code>.
	 */
	public void setZoomfactor(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.zoomfactor</code>.
	 */
	public Integer getZoomfactor() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>oli_lunchy.offices.fk_Community</code>.
	 */
	public void setFkCommunity(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.fk_Community</code>.
	 */
	public Integer getFkCommunity() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>oli_lunchy.offices.country</code>.
	 */
	public void setCountry(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>oli_lunchy.offices.country</code>.
	 */
	public String getCountry() {
		return (String) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, String, Double, Double, Integer, Integer, String> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, String, Double, Double, Integer, Integer, String> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Offices.OFFICES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Offices.OFFICES.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field3() {
		return Offices.OFFICES.GEO_LAT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field4() {
		return Offices.OFFICES.GEO_LNG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Offices.OFFICES.ZOOMFACTOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Offices.OFFICES.FK_COMMUNITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Offices.OFFICES.COUNTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value3() {
		return getGeoLat();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value4() {
		return getGeoLng();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getZoomfactor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getFkCommunity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getCountry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value3(Double value) {
		setGeoLat(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value4(Double value) {
		setGeoLng(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value5(Integer value) {
		setZoomfactor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value6(Integer value) {
		setFkCommunity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord value7(String value) {
		setCountry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfficesRecord values(Integer value1, String value2, Double value3, Double value4, Integer value5, Integer value6, String value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OfficesRecord
	 */
	public OfficesRecord() {
		super(Offices.OFFICES);
	}

	/**
	 * Create a detached, initialised OfficesRecord
	 */
	public OfficesRecord(Integer id, String name, Double geoLat, Double geoLng, Integer zoomfactor, Integer fkCommunity, String country) {
		super(Offices.OFFICES);

		setValue(0, id);
		setValue(1, name);
		setValue(2, geoLat);
		setValue(3, geoLng);
		setValue(4, zoomfactor);
		setValue(5, fkCommunity);
		setValue(6, country);
	}
}
