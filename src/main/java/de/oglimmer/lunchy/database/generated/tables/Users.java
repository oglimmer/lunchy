/**
 * This class is generated by jOOQ
 */
package de.oglimmer.lunchy.database.generated.tables;


import de.oglimmer.lunchy.database.generated.Keys;
import de.oglimmer.lunchy.database.generated.OliLunchy;
import de.oglimmer.lunchy.database.generated.tables.records.UsersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users extends TableImpl<UsersRecord> {

	private static final long serialVersionUID = 2142624425;

	/**
	 * The reference instance of <code>oli_lunchy.users</code>
	 */
	public static final Users USERS = new Users();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UsersRecord> getRecordType() {
		return UsersRecord.class;
	}

	/**
	 * The column <code>oli_lunchy.users.id</code>.
	 */
	public final TableField<UsersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.email</code>.
	 */
	public final TableField<UsersRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.password</code>.
	 */
	public final TableField<UsersRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.displayname</code>.
	 */
	public final TableField<UsersRecord, String> DISPLAYNAME = createField("displayname", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.created_On</code>.
	 */
	public final TableField<UsersRecord, Timestamp> CREATED_ON = createField("created_On", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.users.last_Login</code>.
	 */
	public final TableField<UsersRecord, Timestamp> LAST_LOGIN = createField("last_Login", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.users.permissions</code>.
	 */
	public final TableField<UsersRecord, Integer> PERMISSIONS = createField("permissions", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.password_Reset_Token</code>.
	 */
	public final TableField<UsersRecord, String> PASSWORD_RESET_TOKEN = createField("password_Reset_Token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>oli_lunchy.users.password_Reset_Timestamp</code>.
	 */
	public final TableField<UsersRecord, Timestamp> PASSWORD_RESET_TIMESTAMP = createField("password_Reset_Timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>oli_lunchy.users.long_Time_Token</code>.
	 */
	public final TableField<UsersRecord, String> LONG_TIME_TOKEN = createField("long_Time_Token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>oli_lunchy.users.long_Time_Timestamp</code>.
	 */
	public final TableField<UsersRecord, Timestamp> LONG_TIME_TIMESTAMP = createField("long_Time_Timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>oli_lunchy.users.fk_Base_Office</code>.
	 */
	public final TableField<UsersRecord, Integer> FK_BASE_OFFICE = createField("fk_Base_Office", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.fk_Community</code>.
	 */
	public final TableField<UsersRecord, Integer> FK_COMMUNITY = createField("fk_Community", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.email_Updates</code>.
	 */
	public final TableField<UsersRecord, Integer> EMAIL_UPDATES = createField("email_Updates", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.users.last_Email_Update</code>.
	 */
	public final TableField<UsersRecord, Timestamp> LAST_EMAIL_UPDATE = createField("last_Email_Update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.users.next_Email_Update</code>.
	 */
	public final TableField<UsersRecord, Timestamp> NEXT_EMAIL_UPDATE = createField("next_Email_Update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.users.list_view_col_prio</code>.
	 */
	public final TableField<UsersRecord, String> LIST_VIEW_COL_PRIO = createField("list_view_col_prio", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>oli_lunchy.users</code> table reference
	 */
	public Users() {
		this("users", null);
	}

	/**
	 * Create an aliased <code>oli_lunchy.users</code> table reference
	 */
	public Users(String alias) {
		this(alias, USERS);
	}

	private Users(String alias, Table<UsersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Users(String alias, Table<UsersRecord> aliased, Field<?>[] parameters) {
		super(alias, OliLunchy.OLI_LUNCHY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UsersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UsersRecord> getPrimaryKey() {
		return Keys.KEY_USERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UsersRecord>> getKeys() {
		return Arrays.<UniqueKey<UsersRecord>>asList(Keys.KEY_USERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UsersRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UsersRecord, ?>>asList(Keys.FK_USR_OFF, Keys.FK_USR_COM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Users as(String alias) {
		return new Users(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Users rename(String name) {
		return new Users(name, null);
	}
}
