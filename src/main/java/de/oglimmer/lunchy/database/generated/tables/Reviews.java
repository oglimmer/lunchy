/**
 * This class is generated by jOOQ
 */
package de.oglimmer.lunchy.database.generated.tables;


import de.oglimmer.lunchy.database.generated.Keys;
import de.oglimmer.lunchy.database.generated.OliLunchy;
import de.oglimmer.lunchy.database.generated.tables.records.ReviewsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reviews extends TableImpl<ReviewsRecord> {

	private static final long serialVersionUID = -717443370;

	/**
	 * The reference instance of <code>oli_lunchy.reviews</code>
	 */
	public static final Reviews REVIEWS = new Reviews();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ReviewsRecord> getRecordType() {
		return ReviewsRecord.class;
	}

	/**
	 * The column <code>oli_lunchy.reviews.id</code>.
	 */
	public final TableField<ReviewsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.reviews.fk_User</code>.
	 */
	public final TableField<ReviewsRecord, Integer> FK_USER = createField("fk_User", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.reviews.fk_Location</code>.
	 */
	public final TableField<ReviewsRecord, Integer> FK_LOCATION = createField("fk_Location", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.reviews.comment</code>.
	 */
	public final TableField<ReviewsRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>oli_lunchy.reviews.created_On</code>.
	 */
	public final TableField<ReviewsRecord, Timestamp> CREATED_ON = createField("created_On", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.reviews.last_Update</code>.
	 */
	public final TableField<ReviewsRecord, Timestamp> LAST_UPDATE = createField("last_Update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>oli_lunchy.reviews.rating</code>.
	 */
	public final TableField<ReviewsRecord, Integer> RATING = createField("rating", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>oli_lunchy.reviews.favorite_Meal</code>.
	 */
	public final TableField<ReviewsRecord, String> FAVORITE_MEAL = createField("favorite_Meal", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>oli_lunchy.reviews.fk_Community</code>.
	 */
	public final TableField<ReviewsRecord, Integer> FK_COMMUNITY = createField("fk_Community", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oli_lunchy.reviews.on_Site_Time</code>.
	 */
	public final TableField<ReviewsRecord, Integer> ON_SITE_TIME = createField("on_Site_Time", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>oli_lunchy.reviews.travel_Time</code>.
	 */
	public final TableField<ReviewsRecord, Integer> TRAVEL_TIME = createField("travel_Time", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>oli_lunchy.reviews</code> table reference
	 */
	public Reviews() {
		this("reviews", null);
	}

	/**
	 * Create an aliased <code>oli_lunchy.reviews</code> table reference
	 */
	public Reviews(String alias) {
		this(alias, REVIEWS);
	}

	private Reviews(String alias, Table<ReviewsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Reviews(String alias, Table<ReviewsRecord> aliased, Field<?>[] parameters) {
		super(alias, OliLunchy.OLI_LUNCHY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ReviewsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_REVIEWS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ReviewsRecord> getPrimaryKey() {
		return Keys.KEY_REVIEWS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ReviewsRecord>> getKeys() {
		return Arrays.<UniqueKey<ReviewsRecord>>asList(Keys.KEY_REVIEWS_PRIMARY, Keys.KEY_REVIEWS_FKUSER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ReviewsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ReviewsRecord, ?>>asList(Keys.FK_REV_USR, Keys.FK_REV_LOC, Keys.FK_REV_COM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Reviews as(String alias) {
		return new Reviews(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Reviews rename(String name) {
		return new Reviews(name, null);
	}
}
